name: Build - buzz-frontend
on:
  push:
    branches:
      - "**"
      - "!changeset-release/master"
    tags-ignore: "**"
env:
  APP_NAME: buzz-frontend
  HOME: /actions-runner/_work
  GITHUB_ACCESS_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  BUILD_PATH: build/browser
  AWS_DEFAULT_REGION: ap-south-1
  AWS_S3_STAGE_CACHE_BUCKET_NAME: rzp-1018-nonprod-actions-cache
  AWS_S3_STAGE_BUCKET_NAME: rzp-1018-nonprod-buzz-frontend
  AWS_S3_STAGE_ROLE: arn:aws:iam::101860328116:role/gha-stage-buzz-frontend-action
  AWS_S3_PROD_CACHE_BUCKET_NAME: ${{ secrets.ACTIONS_CACHE_AWS_S3_BUCKET }}
  AWS_S3_PROD_BUCKET_NAME: rzp-1415-prod-buzz-frontend
  AWS_S3_PROD_ROLE: arn:aws:iam::141592612890:role/gha-prod-buzz-frontend-action
jobs:
  beta-build:
    name: Beta Build
    if: "!(github.ref == 'refs/heads/master' && github.event.head_commit.author.name != 'rzpcibot')"
    runs-on: self-hosted
    timeout-minutes: 15
    concurrency:
      group: beta-build-${{ github.ref }}
      cancel-in-progress: true
    env:
      STAGE: beta
      VERSION: ${{ github.sha }}
    steps:
      - name: Set workflow start time
        run: echo "WORKFLOW_START_TIME=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
        working-directory: /
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v18.12.1
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Enable webpack persistent caching
        uses: actions/cache@v3
        id: build-webpack-persistent-cache
        with:
          path: node_modules/.cache/webpack
          key: build-${{ hashFiles('**/webpack.*.js') }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            build-${{ hashFiles('**/webpack.*.js') }}-${{ hashFiles('**/yarn.lock') }}
            build-${{ hashFiles('**/webpack.*.js') }}-
      - name: Build
        run: yarn ${STAGE}:build
      - name: Configure Stage AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_S3_STAGE_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Push Artifacts to Stage S3 Cache
        id: push-artifacts-to-stage
        run: aws s3 cp ${BUILD_PATH} s3://${AWS_S3_STAGE_CACHE_BUCKET_NAME}/${APP_NAME}/${STAGE}/${VERSION} --recursive
      - name: Log Build Info to Universe Metrics
        run: yarn universe log-build-workflow
      - name: Create comment with build information
        if: always()
        run: yarn universe comment-build-info
        env:
          GITHUB_ACCESS_TOKEN: ${{env.GITHUB_ACCESS_TOKEN}}
          BUILD_STATUS: ${{ steps.push-artifacts-to-stage.outcome }}
          APP_TYPE: CSR
      - name: Print Deployment Link on Summary
        run: yarn universe print-deployment-link
        env:
          APP_TYPE: CSR
  production-build:
    name: Production Build
    if: "${{ github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, 'build: update version') && github.event.head_commit.author.name == 'rzpcibot' }}"
    runs-on: self-hosted
    timeout-minutes: 15
    concurrency:
      group: production-build-${{ github.ref }}
      cancel-in-progress: true
    env:
      STAGE: production
    steps:
      - name: Set workflow start time
        run: echo "WORKFLOW_START_TIME=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
        working-directory: /
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v18.12.1
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Enable webpack persistent caching
        uses: actions/cache@v3
        id: build-webpack-persistent-cache
        with:
          path: node_modules/.cache/webpack
          key: build-${{ hashFiles('**/webpack.*.js') }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |-
            build-${{ hashFiles('**/webpack.*.js') }}-${{ hashFiles('**/yarn.lock') }}
            build-${{ hashFiles('**/webpack.*.js') }}-
      - name: Set Version
        run: echo "VERSION=$(node -p "require('./package.json').version")">> $GITHUB_ENV
      - name: Build
        run: yarn ${STAGE}:build
      - name: Configure Production AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_S3_PROD_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Push Artifacts to Production S3 Cache
        run: aws s3 cp ${BUILD_PATH} s3://${AWS_S3_PROD_CACHE_BUCKET_NAME}/${APP_NAME}/${STAGE}/${VERSION} --recursive
      - name: Log Build Info to Universe Metrics
        run: yarn universe log-build-workflow
      - name: Print Deployment Link on Summary
        run: yarn universe print-deployment-link
        env:
          APP_TYPE: CSR
