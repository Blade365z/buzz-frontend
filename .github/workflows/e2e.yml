name: E2E Tests - buzz-frontend
on:
  push:
    branches:
      - master
  issue_comment:
    types:
      - created
env:
  APP_NAME: buzz-frontend
  HOME: /actions-runner/_work
  BUILD_PATH: build/browser
  GITHUB_ACCESS_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  AWS_DEFAULT_REGION: ap-south-1
  AWS_S3_STAGE_BUCKET_NAME: rzp-1018-nonprod-buzz-frontend
  AWS_S3_STAGE_ROLE: arn:aws:iam::101860328116:role/gha-stage-buzz-frontend-action
  DOCKER_USERNAME: ${{ secrets.HARBOR_DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
  DOCKER_REGISTRY: c.rzp.io
  ARGO_TOKEN: ${{ secrets.ARGO_TOKEN }}
jobs:
  e2e-on-pr-comment:
    name: Run E2E Tests on PR Comment
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/run-e2e')}}
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
      - name: Fetch data of comment's associated PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch
        with:
          repo_token: ${{ env.GITHUB_ACCESS_TOKEN }}
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
          ref: ${{ steps.comment-branch.outputs.head_ref }}
      - name: Setup Node v18.12.1
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.DOCKER_REGISTRY}}/razorpay/${{env.APP_NAME}}-e2e:${{ steps.comment-branch.outputs.head_sha }}
          push: true
          file: ./Dockerfile.e2e
          secrets: GITHUB_ACCESS_TOKEN=${{env.GITHUB_ACCESS_TOKEN}}
      - name: E2E Tests Webhook
        run: yarn test:e2e-infra
        env:
          COMMIT_ID: ${{ steps.comment-branch.outputs.head_sha }}
          PR_NUMBER: ${{ github.event.issue.number }}
          REPO_NAME: ${{ github.event.repository.name }}
          JOB_URL: https://argo.dev.razorpay.in/api/v1/events/argo-workflows/buzz-frontend-e2e
  e2e-on-master-merge:
    name: Run E2E Tests on Master Branch
    if: ${{ github.ref == 'refs/heads/master' && !github.event.comment.body }}
    runs-on: self-hosted
    timeout-minutes: 60
    env:
      STAGE: devstack
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v18.12.1
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - name: Install Yarn
        run: npm install -g yarn
      - name: Setup Cache & Install Dependencies
        uses: bahmutov/npm-install@v1.8.15
        with:
          install-command: yarn --frozen-lockfile
      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.HARBOR_DOCKER_USERNAME }}
          password: ${{ secrets.HARBOR_DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.DOCKER_REGISTRY}}/razorpay/${{env.APP_NAME}}-e2e:${{ github.sha }}
          push: true
          file: ./Dockerfile.e2e
          secrets: GITHUB_ACCESS_TOKEN=${{env.GITHUB_ACCESS_TOKEN}}
      - name: Build
        run: yarn ${STAGE}:build
      - name: Configure Stage AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_S3_STAGE_ROLE }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-duration-seconds: 900
      - name: Deploy to Devstack
        run: >-
          aws s3 cp ${BUILD_PATH}/index.html s3://${AWS_S3_STAGE_CACHE_BUCKET_NAME}/${APP_NAME}/${STAGE}/${VERSION} --acl public-read --content-type "text/html" --metadata-directive REPLACE
          --cache-control max-age=0,no-cache,no-store,must-revalidate

          aws s3 cp ${BUILD_PATH} s3://${AWS_S3_STAGE_CACHE_BUCKET_NAME}/${APP_NAME}/${STAGE}/${VERSION}/${BUILD_PATH} --acl public-read --exclude ${BUILD_PATH}/index.html --metadata-directive REPLACE
          --cache-control max-age=0,no-cache,no-store,must-revalidate --recursive

          aws s3 cp ${BUILD_PATH} s3://${AWS_S3_STAGE_CACHE_BUCKET_NAME}/${APP_NAME}/${STAGE}/${VERSION} --acl public-read --exclude "*" --include "js/*.js" --include "index.html" --include "static/*"
          --recursive --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate
        env:
          VERSION: ${{ github.sha }}
      - name: E2E Test Webhook
        run: yarn test:e2e-infra
        env:
          COMMIT_ID: ${{ github.sha }}
          IS_MASTER: true
          REPO_NAME: ${{ github.event.repository.name }}
          JOB_URL: https://argo.dev.razorpay.in/api/v1/events/argo-workflows/buzz-frontend-e2e
